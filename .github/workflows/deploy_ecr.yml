name: Deploy to ECR

on:
  workflow_dispatch:
    inputs:
      experiment_name:
        description: 'Name of the experiment. No spaces'
        required: true
        default: 'experiment-0000'

jobs:
  
  build:
    
    name: Build and push Image
    runs-on: ubuntu-latest
   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    #- name: Build, tag, and push image to Amazon ECR
    #  env:
    #    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #    ECR_REPOSITORY: lux-clarai
    #    IMAGE_TAG: ${{github.event.inputs.experiment_name}}-cpu
    #  run: |
    #    docker build --file Dockerfile.cpu -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #    docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Upload and run AWS state machine
      env:
        STEP_NAME: lux-clarai-trainjob-${{github.event.inputs.experiment_name}}
        STEP_ROLE_ARN: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/StepFunctions-lux-clarai-trainjob
        STEP_ARN: arn:aws:states:us-east-1:${{secrets.AWS_ACCOUNT_ID}}:stateMachine:lux-clarai-trainjob-${{github.event.inputs.experiment_name}}
      run: |
        aws stepfunctions create-state-machine --name $STEP_NAME --definition "`cat training_job.json`" --role-arn $STEP_ROLE_ARN
        aws stepfunctions update-state-machine --state-machine-arn $STEP_ARN --definition "`cat training_job.json`"
        aws stepfunctions start-execution --state-machine-arn $STEP_ARN --input '{"experiment_name":"${{github.event.inputs.experiment_name}}-cpu"}'
  

